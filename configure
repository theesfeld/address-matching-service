#!/usr/bin/env sh

set -eu

show_help() {
	cat <<'EOF'
Usage: ./configure [OPTIONS]

Options:
  --prefix=PATH     Installation prefix (default: /usr/local)
  --bindir=PATH     Binary installation directory (default: PREFIX/bin)
  --unitdir=PATH    systemd unit directory (default: /etc/systemd/system)
  --sysconfdir=PATH Configuration directory for env file (default: /etc/address-matching-service)
  --with-pg-config=PATH  Path to pg_config (default: use PG_CONFIG env or search PATH)
  -h, --help        Show this help message and exit
EOF
}

prefix="/usr/local"
bindir=""
unitdir="/etc/systemd/system"
sysconfdir="/etc/address-matching-service"
pg_config_cmd="${PG_CONFIG:-pg_config}"

for arg in "$@"; do
	case "$arg" in
		--prefix=*)
			prefix="${arg#*=}"
			;;
		--bindir=*)
			bindir="${arg#*=}"
			;;
		--unitdir=*)
			unitdir="${arg#*=}"
			;;
		--sysconfdir=*)
			sysconfdir="${arg#*=}"
			;;
		--with-pg-config=*)
			pg_config_cmd="${arg#*=}"
			;;
		-h|--help)
			show_help
			exit 0
			;;
		*)
			echo "Unknown option: $arg" >&2
			show_help
			exit 1
			;;
	esac
done

if [ -z "$bindir" ]; then
	bindir="$prefix/bin"
fi

pq_cflags="-I/usr/include/postgresql"
pq_ldflags=""
pq_libs="-lpq"

if command -v "$pg_config_cmd" >/dev/null 2>&1; then
	inc_dir="$($pg_config_cmd --includedir 2>/dev/null || true)"
	lib_dir="$($pg_config_cmd --libdir 2>/dev/null || true)"
	if [ -n "$inc_dir" ] && [ -d "$inc_dir" ]; then
		pq_cflags="-I$inc_dir"
	fi
	if [ -n "$lib_dir" ] && [ -d "$lib_dir" ]; then
		pq_ldflags="-L$lib_dir"
	fi
else
	echo "warning: pg_config not found; falling back to /usr/include/postgresql" >&2
fi

cat > config.mk <<EOF
# Generated by ./configure
PREFIX = $prefix
BINDIR = $bindir
SYSTEMD_UNITDIR = $unitdir
SYSCONFDIR = $sysconfdir
PQ_CFLAGS = $pq_cflags
PQ_LDFLAGS = $pq_ldflags
PQ_LIBS = $pq_libs
PG_CONFIG = $pg_config_cmd
EOF

cat <<EOF
Configured Address Matching Service
  prefix : $prefix
  bindir : $bindir
  unitdir: $unitdir
  sysconf: $sysconfdir
  pg_config: $pg_config_cmd

Run 'make' to build, then 'make install' to install.
EOF
